{"version":3,"sources":["webpack:///./src/components/about-card/about-card.js","webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/layout/header.js","webpack:///./src/components/layout/footer.js","webpack:///./src/components/layout/layout.js"],"names":["AboutCard","react_default","a","createElement","className","cardStyles","cardContainer","SecondPage","layout","seo","title","style","textAlign","margin","about_card","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","Object","assign","json","propTypes","PropTypes","shape","string","isRequired","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","props","Consumer","staticQueryData","query","render","children","func","Header","siteTitle","headerStyle","header","navBar","gatsby_link_default","to","activeClassName","active","SocialIcon","link","href","esm","Provider","value","size","verticalAlign","Footer","footerStyles","footer","navlist","footer_SocialIcon","fccIcon","icon","index_esm","codepenIcon","fbIcon","Date","getFullYear","Layout","gatsby_browser_entry_StaticQuery","styles","layoutContainer","_755544856","node"],"mappings":"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","file":"component---src-pages-about-js-fe8be840620cf455afb2.js","sourcesContent":["import React from 'react';\n\nimport cardStyles from './about-card.module.scss';\n\nconst AboutCard = () => (\n    <aside className={cardStyles.cardContainer} >\n        <dl>\n            <dt>Personal attitudes</dt>\n            <dd>Methodical</dd>\n            <dd>Analytical</dd>\n            <dd>Organized</dd>\n            <dt>Based in</dt>\n            <dd>Italy</dd>\n            <dt>Interests</dt>\n            <dd>Coding</dd>\n            <dd>Environment</dd>\n        </dl>\n    </aside>\n);\n\nexport default AboutCard;","import React from \"react\"\n\nimport AboutCard from '../components/about-card/about-card';\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst SecondPage = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <p style={{textAlign: \"center\", margin: \"4rem\"}} >\n    I am Layer, a self-taught fullstack developer.\n    </p>\n    <AboutCard />\n  </Layout>\n)\n\nexport default SecondPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nimport headerStyle from './header.module.scss';\n\n\n\nconst Header = ({ siteTitle }) => (\n\t<header className={headerStyle.header}>\n\t\t<div className={headerStyle.title}>\n\t\t\t<h2 className=\"hidden\">Header</h2>\n\t\t\t<h2>\n\t\t\t\t\tLAYER\n\t\t\t</h2>\n\t\t\t<p>Web developer</p>\n\t\t</div>\t\t\n\t\t<nav className={headerStyle.navBar}>\n\t\t\t<h2 className=\"hidden\">Navigation elements</h2>\n\t\t\t<li>\n\t\t\t\t<Link to=\"/about\" activeClassName={headerStyle.active} >\n\t\t\t\t\tAbout\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to=\"/\" activeClassName={headerStyle.active}>\n\t\t\t\t\tHome\n\t\t\t\t</Link>\n\t\t\t</li>\n\t\t</nav>\n\t</header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react';\n\nimport {FaFreeCodeCamp, FaCodepen, FaFacebook} from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\n\nimport footerStyles from './footer.module.scss';\n\nconst SocialIcon = ({link, className, children}) => (\n      <a href={link}>\n        <li>\n          <IconContext.Provider value={{\n              size: \"2em\",\n\t\t\t  className,\n              style: {\n                verticalAlign: \"middle\"\n              }}}\n          >\n            <div>\n              {children}\n            </div>                  \n          </IconContext.Provider>\n        </li>\n      </a>\n)\n\nconst Footer = () => {\n    return (\n        <footer className={footerStyles.footer}>\n            <h2 className=\"hidden\">Footer - social icons</h2>\n            <ul className={footerStyles.navlist}>\n              <SocialIcon \n              link=\"www.freecodecamp.org\" \n              className={[footerStyles.fccIcon, footerStyles.icon].join(' ')}\n              > \n                <FaFreeCodeCamp />\n              </SocialIcon>\n              <SocialIcon \n                link=\"www.codepen.org\"   \t\t\n                className={[footerStyles.codepenIcon, footerStyles.icon].join(' ')}\n              >\n                <FaCodepen />\n              </SocialIcon>\n              <SocialIcon \n                link=\"www.facebook.com\" \n                className={[footerStyles.fbIcon, footerStyles.icon].join(' ')}\n              >\n                <FaFacebook />\n              </SocialIcon>\n            </ul>\n             Layer © {new Date().getFullYear()}\n        </footer>\n    );    \n};\n\nexport default Footer;","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\";\n\n\nimport \"./global.scss\";\nimport styles from './layout.module.scss';\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n\n    render={data => (\n      <div className={styles.layoutContainer}>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <main className={styles.content}>\n          <h2 className=\"hidden\">Projects</h2>\n          {children}\n        </main>\n        <Footer />\n      </div>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}